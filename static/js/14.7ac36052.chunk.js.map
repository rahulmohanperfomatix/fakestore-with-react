{"version":3,"file":"static/js/14.7ac36052.chunk.js","mappings":"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","sources":["layouts/Navbar.tsx","layouts/Sidebar.tsx","modules/products/productsRoutes.tsx","pages/Dashboard.tsx","styles/theme.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\n\r\nimport { authActions } from \"@src/modules/auth/authSlice\";\r\nimport { darkTheme, lightTheme } from \"@src/styles/theme\";\r\nimport { clearStorage } from \"@src/utils/utils\";\r\n\r\ntype NavbarType = {\r\n\ttoggleSidebar: () => void;\r\n\tisDark: boolean;\r\n}\r\n\r\nconst NavbarStyled = styled.nav<{isDark:boolean}>`\r\n\tbackground-color: ${props => props.isDark ? darkTheme.primaryColor : lightTheme.primaryColor};\r\n\tcolor: ${props => props.isDark ? darkTheme.textColor : lightTheme.textColor};\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tpadding: 10px;\r\n\r\n\ta{\r\n\t\tcolor: #fff;\r\n\t}\r\n\r\n\t&.sticky {\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t}\r\n`;\r\n\r\nconst Navbar: React.FC<NavbarType> = ({toggleSidebar, isDark}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = () => {\r\n    clearStorage();\r\n    clearStorage(true);\r\n    dispatch(authActions.clearState());\r\n    navigate(\"/login\");\r\n  };\r\n  return (\r\n    <NavbarStyled isDark={isDark} className=\"sticky\">\r\n      <button onClick={toggleSidebar}><GiHamburgerMenu  style={{ color: \"white\" }}/></button>\r\n      <a onClick={onLogout}>Logout</a>\r\n    </NavbarStyled>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { darkTheme, lightTheme } from \"@src/styles/theme\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ntype SidebarType = {\r\n  isOpen: boolean;\r\n  isDark: boolean;\r\n};\r\n\r\nconst SidebarStyled = styled.div<{ isOpen: boolean; isDark: boolean }>`\r\n  width: 200px;\r\n  background-color: ${(props) =>\r\n    !props.isDark ? lightTheme.primaryColor : darkTheme.primaryColor};\r\n  height: 100vh;\r\n  position: fixed;\r\n  transition: transform 0.3s ease;\r\n  transform: translateX(${(props) => (props.isOpen ? \"0\" : \"-100%\")});\r\n\r\n  ul {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  .nav-item {\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    &:hover {\r\n      background-color: ${(props) =>\r\n    !props.isDark ? lightTheme.secondaryLightColor : darkTheme.secondaryLightColor};\r\n    }\r\n  }\r\n\r\n  .nav-item {\r\n    &.active {\r\n      background-color: ${(props) =>\r\n    !props.isDark ? lightTheme.secondaryColor : darkTheme.secondaryColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Sidebar: React.FC<SidebarType> = ({ isOpen, isDark }) => {\r\n  const navigate = useNavigate();\r\n  const [activePath, setActivePath] = useState(window.location.pathname);\r\n\r\n  const handleNavigation = (path: string) => {\r\n    setActivePath(path);\r\n    navigate(path);\r\n  };\r\n\r\n  return (\r\n    <SidebarStyled isOpen={isOpen} isDark={isDark}>\r\n      <ul>\r\n        <li\r\n          className={`nav-item ${\r\n            (activePath === \"/dashboard/products\" || activePath === \"/dashboard\") ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => handleNavigation(\"/dashboard/products\")}\r\n        >\r\n            Products\r\n        </li>\r\n        <li\r\n          className={`nav-item ${\r\n            activePath === \"/dashboard/categories\" ? \"active\" : \"\"\r\n          }`}\r\n          onClick={() => handleNavigation(\"/dashboard/categories\")}\r\n        >\r\n            Users\r\n        </li>\r\n      </ul>\r\n    </SidebarStyled>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { lazy } from \"react\";\r\n\r\nconst ProductsList = lazy(\r\n  () => import(\"@src/modules/products/containers/ProductList\")\r\n);\r\n\r\nconst ProductsRoutes = () => [\r\n  {\r\n    path: \"\",\r\n    element: <ProductsList />\r\n  },\r\n  {\r\n    path: \"products\",\r\n    element: <ProductsList />\r\n  }\r\n];\r\n\r\nexport default ProductsRoutes;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Navbar from \"@src/layouts/Navbar\";\r\nimport Sidebar from \"@src/layouts/Sidebar\";\r\nimport { useRoutes } from \"react-router-dom\";\r\nimport ProductsRoutes from \"@src/modules/products/productsRoutes\";\r\nimport \"@src/pages/DashboardPage.scss\";\r\n\r\nconst DashboardPage = () => {\r\n  const productRoutes = useRoutes(ProductsRoutes());\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if(window.innerWidth <= 768){\r\n        setSidebarOpen(false);\r\n      }else{\r\n        setSidebarOpen(true);\r\n      }\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const mainContentStyle = {\r\n    marginLeft: sidebarOpen ? \"200px\" : \"0px\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar toggleSidebar={toggleSidebar} isDark={false}/>\r\n      <Sidebar isOpen={sidebarOpen} isDark={false}/>\r\n      <main className=\"main-content\" style={mainContentStyle}>\r\n        {productRoutes}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;","// theme.js\r\n\r\nexport const lightTheme = {\r\n  primaryColor: \"#6C63FF\",\r\n  secondaryColor: \"#FFAFCC\",\r\n  secondaryLightColor: \"rgba(255, 200, 221, 0.3)\",\r\n  accentColor: \"#FFD700\",\r\n  backgroundColor: \"#FFFFFF\",\r\n  textColor: \"#333333\",\r\n  primaryColorDark: \"#5b56e0\",\r\n  secondaryColorDark: \"#e69fb9\",\r\n  accentColorDark: \"#e6b800\",\r\n  white: \"#fff\",\r\n  \r\n  inputBorder: \"#ccc\",\r\n  inputHoverBorder: \"#9A8CFF\",\r\n  inputFocusBorder: \"#6C63FF\",\r\n  inputBackground: \"#fff\",\r\n  inputText: \"#333\",\r\n  inputPlaceholder: \"#aaa\",\r\n  inputValid: \"#28a745\",\r\n  inputInvalid: \"#dc3545\",\r\n  inputDisabledBackground: \"#f5f5f5\",\r\n  inputDisabledText: \"#999\",\r\n};\r\n  \r\nexport const darkTheme = {\r\n  primaryColor: \"#9A8CFF\",\r\n  secondaryColor: \"#FFC8DD\",\r\n  secondaryLightColor: \"rgba (255, 175, 204, 0.3)\",\r\n  accentColor: \"#FFEA00\",\r\n  backgroundColor: \"#121212\",\r\n  textColor: \"#E0E0E0\",\r\n  primaryColorLight: \"#a89eff\",\r\n  secondaryColorLight: \"#ffd1e3\",\r\n  accentColorLight: \"#fff200\",\r\n  white: \"#fff\",\r\n\t\r\n  inputBorder: \"#555\",\r\n  inputHoverBorder: \"#9A8CFF\",\r\n  inputFocusBorder: \"#6C63FF\",\r\n  inputBackground: \"#333\",\r\n  inputText: \"#fff\",\r\n  inputPlaceholder: \"#bbb\",\r\n  inputValid: \"#28a745\",\r\n  inputInvalid: \"#dc3545\",\r\n  inputDisabledBackground: \"#444\",\r\n  inputDisabledText: \"#aaa\",\r\n};\r\n  "],"names":["NavbarStyled","styled","nav","_templateObject","_taggedTemplateLiteral","props","isDark","darkTheme","primaryColor","lightTheme","textColor","_ref","toggleSidebar","navigate","useNavigate","dispatch","useDispatch","_jsxs","className","children","_jsx","onClick","GiHamburgerMenu","style","color","onLogout","clearStorage","authActions","clearState","SidebarStyled","div","isOpen","secondaryLightColor","secondaryColor","activePath","setActivePath","useState","window","location","pathname","handleNavigation","path","concat","ProductsList","lazy","ProductsRoutes","element","DashboardPage","productRoutes","useRoutes","sidebarOpen","setSidebarOpen","useEffect","handleResize","innerWidth","addEventListener","removeEventListener","mainContentStyle","marginLeft","Navbar","Sidebar","accentColor","backgroundColor","primaryColorDark","secondaryColorDark","accentColorDark","white","inputBorder","inputHoverBorder","inputFocusBorder","inputBackground","inputText","inputPlaceholder","inputValid","inputInvalid","inputDisabledBackground","inputDisabledText","primaryColorLight","secondaryColorLight","accentColorLight"],"sourceRoot":""}